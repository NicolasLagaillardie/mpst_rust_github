[package]
name = "mpstthree"
version = "0.1.17"
authors = ["NicolasLagaillardie <nicolas.lagaillardie@tutanota.com>"]
edition = "2018"
description = "A library implementing Multiparty Session Types for 2 or more participants"
readme = "README.md"
homepage = "https://github.com/NicolasLagaillardie/mpst_rust_github"
repository = "https://github.com/NicolasLagaillardie/mpst_rust_github"
license = "MIT OR Apache-2.0"
keywords = ["multiparty", "session", "affine", "multicrusty"]
documentation = "https://docs.rs/mpstthree"
categories = ["concurrency"]
# include = [
#     "/benches/**",
#     "/build.rs",
#     "/Cargo.toml",
#     "/LICENSE-APACHE",
#     "/LICENSE-MIT",
#     "/README.md",
#     "/src/**",
#     "/tests/**",
#     "/examples/**",
#     "main.rs",
# ]
exclude = [
    ".vscode/",
    ".travis.yml",
    "codecov.yml",
    ".gitignore",
    ".github/",
    ".cargo_vcs_info.json",
    "scripts/",
    "example/",
    "outputs/",
    "cfsm/",
    "compile_time/",
    "graphs_bench/",
    "rustfmt_2.toml",
    "notes.txt",
    "result.rs",
    "results/",
    "save/",
    "expand/",
    "target/",
]
autotests = false
autobenches = false

################################### Workspace

[workspace]
members = ["mpst_seq", "mpst_seq_proc"]

################################### Lib

[lib]
bench = false

################################### Bin

[[bin]]
name = "mpst"
path = "main.rs"
bench = false

################################### Tests

[[test]]
name = "checking"
path = "tests/checking.rs"
required-features = ["macros_multiple", "checking"]

[[test]]
name = "basics"
path = "tests/basics.rs"
required-features = ["checking"]

[[test]]
name = "binary"
path = "tests/binary.rs"
required-features = ["binary"]

[[test]]
name = "cancel"
path = "tests/cancel.rs"
required-features = ["baking"]

[[test]]
name = "macros_multiple"
path = "tests/macros_multiple.rs"
required-features = ["macros_multiple"]

[[test]]
name = "macros_simple"
path = "tests/macros_simple.rs"
required-features = ["macros_simple"]

[[test]]
name = "baking"
path = "tests/baking.rs"
required-features = ["baking", "checking"]

[[test]]
name = "extra"
path = "tests/extra.rs"
required-features = ["baking"]

[[test]]
name = "interleaved"
path = "tests/interleaved.rs"
required-features = ["baking_interleaved"]

[[test]]
name = "binary_timed"
path = "tests/binary_timed.rs"
required-features = ["binary_timed"]

[[test]]
name = "baking_timed"
path = "tests/baking_timed.rs"
required-features = ["baking_timed"]

[[test]]
name = "baking_message"
path = "tests/baking_message.rs"
required-features = ["baking", "message", "checking"]

[[test]]
name = "main"
path = "tests/main.rs"
required-features = []

################################### Ping-Pong

######### Ping-Pong start
######### Ping-Pong end

################################### Examples

######### Crossbeam

# [[example]]
# name = "example_calculator_crossbeam"
# path = "examples/crossbeam/calculator.rs"
# required-features = ["default"]

# [[example]]
# name = "example_circuit_breaker_crossbeam"
# path = "examples/crossbeam/circuit_breaker.rs"
# required-features = ["default"]

# [[example]]
# name = "example_fib_crossbeam"
# path = "examples/crossbeam/fib.rs"
# required-features = ["default"]

# [[example]]
# name = "example_logging_crossbeam"
# path = "examples/crossbeam/logging.rs"
# required-features = ["default"]

# [[example]]
# name = "example_o_auth_crossbeam"
# path = "examples/crossbeam/o_auth.rs"
# required-features = ["default"]

[[example]]
name = "example_online_wallet_crossbeam"
path = "examples/crossbeam/online_wallet.rs"
required-features = ["default"]

# [[example]]
# name = "example_remote_data_crossbeam"
# path = "examples/crossbeam/remote_data.rs"
# required-features = ["default"]

# [[example]]
# name = "example_servo_crossbeam"
# path = "examples/crossbeam/servo.rs"
# required-features = ["default"]

# [[example]]
# name = "example_simple_voting_crossbeam"
# path = "examples/crossbeam/simple_voting.rs"
# required-features = ["default"]

# [[example]]
# name = "example_smtp_crossbeam"
# path = "examples/crossbeam/smtp.rs"
# required-features = ["default"]

# [[example]]
# name = "example_three_buyers_crossbeam"
# path = "examples/crossbeam/three_buyers.rs"
# required-features = ["default"]

# [[example]]
# name = "example_travel_agency_crossbeam"
# path = "examples/crossbeam/travel_agency.rs"
# required-features = ["default"]

# [[example]]
# name = "example_video_stream_crossbeam"
# path = "examples/crossbeam/video_stream.rs"
# required-features = ["default"]

################################### Profil

[profile.release]
debug = true

################################### Dependencies

[dependencies]
mpst-seq = { path = "mpst_seq" }
# mpst-seq = "0.1"
crossbeam-channel = "0.5"
either = "1.6"
# Extension libraries
hyper = { version = "0.14", features = ["full"], optional = true }
hyper-tls = { version = "0.5", optional = true }
tokio = { version = "1.14", features = ["full"], optional = true }
# For kMC
regex = { version = "1.5", optional = true }
petgraph = { version = "0.6", optional = true }
# Protobuf libraries
protobuf = { version = "3.2", features = ["with-bytes"] }
protobuf-codegen = "3.2"
protoc-bin-vendored = "3.0"

################################### Dev-dependencies for tests/benches

[dev-dependencies]
criterion = { version = "0.5", features = ["html_reports"] }
trybuild = "1.0"
ntest = "0.9"
rand = "0.8"

################################### Features

[features]
default = ["binary", "role", "name", "meshedchannels", "functionmpst"]
binary = []
functionmpst = []
meshedchannels = []
role = []
name = []
message = []
binary_timed = []
macros_simple = ["default"]
macros_multiple = ["default", "macros_simple"]
interleaved = ["baking"] # For interleaved sessions
checking = ["default", "regex", "petgraph"]
baking = ["default", "macros_multiple"]
baking_timed = ["binary_timed"]
baking_interleaved = ["baking", "interleaved"]
baking_checking = ["baking", "checking"]
baking_timed_interleaved = ["baking_timed", "interleaved"]
transport_tcp = ["default"]
transport_udp = ["default"]
transport_http = ["default", "hyper", "hyper-tls", "tokio"]
transport = ["transport_tcp", "transport_udp", "transport_http"]
transport_macros_multiple = [
    "macros_multiple",
    "transport",
] # For test compile examples
protobuf = []
affine_timed = ["baking", "baking_timed"]
full_without_checking = ["baking", "transport", "interleaved"]
full = ["baking_checking", "transport", "baking_timed", "interleaved"]

################################### Doc handling for all-features

# docs.rs-specific configuration
[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "doc_cfg"]

################################### Rust playground features

[package.metadata.playground]
features = ["full", "interleaved"]
