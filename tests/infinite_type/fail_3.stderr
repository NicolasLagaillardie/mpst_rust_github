error[E0432]: unresolved import `rand`
  --> $DIR/fail_3.rs:12:5
   |
12 | use rand::{thread_rng, Rng};
   |     ^^^^ use of undeclared crate or module `rand`

warning: unused import: `std::marker`
  --> $DIR/fail_3.rs:16:5
   |
16 | use std::marker;
   |     ^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

error[E0275]: overflow evaluating the requirement `mpstthree::struct_trait::send::Send<i32, mpstthree::struct_trait::send::Send<SumOp, mpstthree::struct_trait::end::End>>: Session`
  --> $DIR/fail_3.rs:19:10
   |
19 |     More(Send<i32, Recv<i32, Send<i32, Recv<i32, Recv<Self, End>>>>>),
   |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
  ::: $WORKSPACE/src/binary/struct_trait/send.rs
   |
   |     S::Dual: Session,
   |              ------- required by this bound in `mpstthree::struct_trait::send::Send`

error[E0275]: overflow evaluating the requirement `mpstthree::struct_trait::send::Send<i32, Recv<i32, mpstthree::struct_trait::send::Send<i32, Recv<i32, Recv<SumOp, mpstthree::struct_trait::end::End>>>>>: std::marker::Send`
  --> $DIR/fail_3.rs:25:23
   |
25 | fn nice_sum_server(s: NiceSumServer) -> Result<(), Box<dyn Error>> {
   |                       ^^^^^^^^^^^^^
   |
  ::: $WORKSPACE/src/binary/struct_trait/recv.rs
   |
   |     T: marker::Send,
   |        ------------ required by this bound in `Recv`
   |
note: required because it appears within the type `SumOp`
  --> $DIR/fail_3.rs:18:6
   |
18 | enum SumOp {
   |      ^^^^^

error[E0275]: overflow evaluating the requirement `mpstthree::struct_trait::send::Send<i32, Recv<i32, mpstthree::struct_trait::send::Send<i32, Recv<i32, Recv<SumOp, mpstthree::struct_trait::end::End>>>>>: std::marker::Send`
  --> $DIR/fail_3.rs:29:29
   |
29 | fn nice_sum_server_accum(s: NiceSumServer, x: i32) -> Result<(), Box<dyn Error>> {
   |                             ^^^^^^^^^^^^^
   |
  ::: $WORKSPACE/src/binary/struct_trait/recv.rs
   |
   |     T: marker::Send,
   |        ------------ required by this bound in `Recv`
   |
note: required because it appears within the type `SumOp`
  --> $DIR/fail_3.rs:18:6
   |
18 | enum SumOp {
   |      ^^^^^

error[E0275]: overflow evaluating the requirement `Recv<SumOp, mpstthree::struct_trait::end::End>: Session`
  --> $DIR/fail_3.rs:46:1
   |
46 | / fn nice_sum_client_accum(s: NiceSumClient, mut xs: Vec<i32>) -> Result<i32, Box<dyn Error>> {
47 | |     match xs.pop() {
48 | |         Option::Some(x) => {
49 | |             let s = choose!(SumOp::More, s);
...  |
62 | |     }
63 | | }
   | |_^
   |
   = note: required because of the requirements on the impl of `Session` for `Recv<i32, Recv<SumOp, mpstthree::struct_trait::end::End>>`
   = note: required because it appears within the type `mpstthree::struct_trait::send::Send<i32, Recv<i32, mpstthree::struct_trait::send::Send<i32, Recv<i32, Recv<SumOp, mpstthree::struct_trait::end::End>>>>>`
note: required because it appears within the type `SumOp`
  --> $DIR/fail_3.rs:18:6
   |
18 | enum SumOp {
   |      ^^^^^
   = note: required because of the requirements on the impl of `Session` for `Recv<SumOp, mpstthree::struct_trait::end::End>`
