name: Ubuntu

on: [push, pull_request]

jobs:
  ubuntu-build:
    name: Build, test and benchmarks all on Ubuntu

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        rust: [stable]

    steps:
    - uses: actions/checkout@v2
    # - name: Install Haskell
    #   uses: actions/setup-haskell@v1.1
    #   with:
    #     ghc-version: 'latest'
    #     cabal-version: 'latest'
    # - name: Set up Python
    #   uses: actions/setup-python@v2
    #   with:
    #     python-version: 'latest'
    # - name: Install Python dependencies
    #   run: |
    #     python -m pip install --upgrade pip
    #     pip install matplotlib scipy
    # - name: Install cabal dependencies
    #   run: |
    #     cabal install cmdargs ansi-terminal parallel split MissingH --lib
    # - name: Install KMC
    #   run: |
    #     cd ..
    #     git clone https://bitbucket.org/julien-lange/kmc-cav19.git
    #     cd kmc-cav19
    #     ghc KMC -threaded
    #     ghc GenCFSMs
    - name: Format
      run: |
        cargo clean
        cargo fmt --verbose --all -- --check
    - name: Clippy
      run: |
        cargo clean
        cargo clippy --all-features --verbose -- -D warnings
    - name: Check lib
      run: |
        cargo clean
        cargo check --verbose --all --all-features
    - name: Check examples
      run: |
        cargo clean
        cargo check --examples --verbose --all-features
    - name: Check tests
      run: |
        cargo clean
        cargo check --tests --verbose --all-features
    - name: Check benches
      run: |
        cargo clean
        cargo check --benches --verbose --all-features
    - name: Check each features
      run: |
        cargo clean
        cargo check --tests --examples --benches --all --features="default"
        cargo check --tests --examples --benches --all --features="macros_simple"
        cargo check --tests --examples --benches --all --features="macros_multiple"
        cargo check --tests --examples --benches --all --features="checking"
        cargo check --tests --examples --benches --all --features="baking"
        cargo check --tests --examples --benches --all --features="baking_interleaved"
        cargo check --tests --examples --benches --all --features="transport_tcp"
        cargo check --tests --examples --benches --all --features="transport_udp"
        cargo check --tests --examples --benches --all --features="transport_http"
        cargo check --tests --examples --benches --all --features="transport"
        cargo check --tests --examples --benches --all --features="transport_macros_multiple"
        cargo check --tests --examples --benches --all --features="full"
        cargo check --tests --examples --benches --all --features="macros_multiple checking"
    - name: Run doc
      run: |
        cargo clean
        cargo doc --verbose --workspace --all-features
    - name: Build lib
      run: |
        cargo clean
        cargo build --verbose --all --all-features
    - name: Build examples
      run: |
        cargo clean
        cargo build --examples --verbose --all-features
    - name: Build tests
      run: |
        cargo clean
        cargo build --tests --verbose --all-features
    - name: Build benches
      run: |
        cargo clean
        cargo build --benches --verbose --all-features
    - name: Run lib
      run: |
        cargo clean
        cargo run --verbose --all-features
    - name: Run tests all
      run: |
        cargo clean
        cargo test --verbose --all -- --skip kmc
    - name: Run tests no capture
      run: |
        cargo clean
        cargo test --verbose --all -- --nocapture --skip kmc
    - name: Run tests no features
      run: |
        cargo clean
        cargo test --verbose --all --no-default-features --no-run -- --skip kmc
    - name: Run tests all features
      run: |
        cargo clean
        cargo test --verbose --all-features -- --skip kmc
    - name: Run benchmarks
      run: |
        cargo clean
        cargo bench --verbose --all --all-features